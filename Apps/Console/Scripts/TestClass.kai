
// define a component.
// components are added to objects
comp Foo
	a = 1
	fun Add(n)
		return a + n

comp Bar
	b = 2
	fun Add(n)
		return Foo.Add(n) + b

// components can take arguments, like templates
comp Grok(ty)
	c = "grok"
	x = new ty(c.Size())

// define a class, which can have a set of components
class Base : Foo
	
// another class, which derives from Base class
// and also adds two components Bar and Grok
class Spam : Base, Bar, Grok(Signed32)
	this(n)
		Bar.b = n
		Foo.a = n

b = new [Bar, Foo]
assert b.Add(2) == 5

c = new Spam[Grok](3)
d = new Spam(3)

