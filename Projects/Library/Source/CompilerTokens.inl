
void Compiler::Create()
{
	#define ADD_OP(S, N) AddOperation(Operation::N, S);
	ADD_OP("cont", ThisContinuation);
	ADD_OP("true", True);
	ADD_OP("false", False);
	ADD_OP("plus", Plus);
	ADD_OP("+", Plus);
	ADD_OP("-", Minus);
	ADD_OP("minus", Minus);
	ADD_OP("div", Divide);
	ADD_OP("mul", Multiply);
	ADD_OP("set-managed", SetManaged);
	ADD_OP("call-function", CppFunctionCall);
	ADD_OP("()", CppFunctionCall);
	ADD_OP("call-method", CppMethodCall);
	ADD_OP("->", CppMethodCall);
	ADD_OP("type", TypeOf);
	ADD_OP("suspend", Suspend);
	ADD_OP("&", Suspend);
	ADD_OP("replace", Replace);
	ADD_OP("!", Replace);
	ADD_OP("resume", Resume);
	ADD_OP("...", Resume);
	ADD_OP("store", Store);
	ADD_OP("#", Store);
	ADD_OP("get", Retreive);
	ADD_OP("@", Retreive);
	ADD_OP("remove", Remove);
	ADD_OP("rm", Remove);
	ADD_OP("change-scope", ChangeScope);
	ADD_OP("cd", ChangeScope);
	ADD_OP("get-children", GetChildren);
	ADD_OP("ls", GetChildren);
	ADD_OP("drop", Drop);
	ADD_OP("dropn", DropN);
	ADD_OP("swap", Swap);
	ADD_OP("dup", Dup);
	ADD_OP("rot", Rot);
	ADD_OP("rotn", RotN);
	ADD_OP("pick", Pick);
	ADD_OP("clear", Clear);
	ADD_OP("to-array", ToArray);
	ADD_OP(">array", ToArray);
	ADD_OP("to-list", ToList);
	ADD_OP(">list", ToList);
	ADD_OP(">pair", ToPair);
	ADD_OP("expand", Expand);
	ADD_OP("**", Expand);
	ADD_OP("depth", Depth);
	ADD_OP("new", New);
	ADD_OP("name", Name);
	ADD_OP("fullname", Fullname);
	ADD_OP("_TraceAll", TraceAll);
	ADD_OP("_Trace", Trace);
	ADD_OP("ref", Ref);
	ADD_OP(",", Ref);
	ADD_OP("{", ContinuationBegin);
	ADD_OP("}", ContinuationEnd);
	ADD_OP("this", This);
	ADD_OP("self", This);
	ADD_OP("less", Less);
	ADD_OP("<", Less);
	ADD_OP("equiv", Equiv);
	ADD_OP("==", Equiv);
	ADD_OP("gr", Greater);
	ADD_OP(">", Greater);
	ADD_OP("less_or_equiv", LessOrEquiv);
	//ADD_OP("less", LessOrEquiv);
	ADD_OP("gr_or_equiv", GreaterOrEquiv);
	//ADD_OP(">=", GreaterOrEquiv);
	ADD_OP("exists", Exists);
	ADD_OP("over", Over);
	ADD_OP("gc", MarkAndSweep);
	ADD_OP("context", ThisContext);
	ADD_OP("assign", Assign);
	ADD_OP(":=", Assign);
	ADD_OP("?", If);
	ADD_OP("?:", IfElse);
	ADD_OP("?&", IfThenSuspend);
	ADD_OP("if-then", IfThenSuspend);
	ADD_OP("?!", IfThenReplace);
	ADD_OP("?...", IfThenResume);
	ADD_OP("?&&", IfThenSuspendElseSuspend);
	ADD_OP("if-then-else", IfThenSuspendElseSuspend);
	ADD_OP("?!&", IfThenReplaceElseSuspend);
	ADD_OP("?...&", IfThenResumeElseSuspend);
	ADD_OP("?&!", IfThenSuspendElseReplace);
	ADD_OP("?!!", IfThenReplaceElseReplace);
	ADD_OP("?...!", IfThenResumeElseReplace);
	ADD_OP("?&...", IfThenSuspendElseResume);
	ADD_OP("?!...", IfThenReplaceElseResume);
	ADD_OP("?....", IfThenResumeElseResume);
	ADD_OP("executor", Executor);
	ADD_OP("assert", Assert);
	ADD_OP("ntimes", NTimes);
	ADD_OP("for_each", ForEach);
	ADD_OP("for-each", ForEach);
	ADD_OP("LogicalNot", LogicalNot);
	ADD_OP("not", LogicalNot);
	ADD_OP("LogicalAnd", LogicalAnd);
	ADD_OP("and", LogicalAnd);
	ADD_OP("LogicalOr", LogicalOr);
	ADD_OP("or", LogicalOr);
	ADD_OP("LogicalXor", LogicalXor);
	ADD_OP("xor", LogicalXor);
	ADD_OP("LogicalNand", LogicalNand);
	ADD_OP("nand", LogicalNand);
	ADD_OP("BitwiseNot", BitwiseNot);
	ADD_OP("bit_not", BitwiseNot);
	ADD_OP("BitwiseAnd", BitwiseAnd);
	ADD_OP("bit_and", BitwiseAnd);
	ADD_OP("BitwiseOr", BitwiseOr);
	ADD_OP("bit_or", BitwiseOr);
	ADD_OP("BitwiseXor", BitwiseXor);
	ADD_OP("bit_xor", BitwiseXor);
	ADD_OP("BitwiseNand", BitwiseNand);
	ADD_OP("bit_nand", BitwiseNand);
	ADD_OP("get-property", GetProperty);
	ADD_OP("set-property", SetProperty);
	ADD_OP(".", GetProperty);
	ADD_OP(".=", SetProperty);
	ADD_OP("delete", Delete);
	ADD_OP("detach", Detach);

	ADD_OP("index", Index);
	ADD_OP("pre-inc", PreInc);
	ADD_OP("pre-dec", PreDec);
	ADD_OP("post-inc", PostInc);
	ADD_OP("post-dec", PostDec);
	ADD_OP("!=", NotEquiv);

	ADD_OP(">v2", ToVector2);
	ADD_OP(">v3", ToVector3);
	ADD_OP(">v4", ToVector4);

	ADD_OP("set-child", SetChild);
	ADD_OP("<=", SetChild);
	ADD_OP("get-child", GetChild);
	ADD_OP("=>", GetChild);
	ADD_OP("remove-child", RemoveChild);

	ADD_OP("+=", PlusEquals);
	ADD_OP("-=", MinusEquals);
	ADD_OP("*=", MulEquals);
	ADD_OP("/=", DivEquals);
	ADD_OP("%=", ModEquals);
}

