TESTNAME := TestXXX
CC = clang++
CXX_SRCS := $(wildcard *.cpp)

include Makefile.local

CXX_OBJS := ${CXX_SRCS:.cpp=.o}
OBJS := $(CXX_OBJS)


# For OSX
#HOME=/Users/christian
#BOOST_DIR=/usr/local/Cellar/boost/1.60.0_2/include

HOME=/home/christian

KAI_INCLUDE = $(HOME)/dev/KAI/Include
INCLUDE_DIRS := /usr/include /opt/local/include $(KAI_INCLUDE) $(BOOST_DIR) 
LIBRARY_DIRS := /usr/inclue/lib $(HOME)/lib
LIBRARIES := Executor Linraryu gtest

# only needed for testing
CPPFLAGS += -frtti -fexceptions

#  this is all generic
CPPFLAGS += -ferror-limit=5
CPPFLAGS += -fdiagnostics-show-template-tree -fno-elide-type
CPPFLAGS += -DKAI_NAMESPACE_NAME=kai -DKAI_HAVE_PRAGMA_ONCE
CPPFLAGS += -fpermissive -g -std=c++1y

PCH = Precompiled
USE_PCH = -include-pch $(PCH).pch

LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir))
LDFLAGS += $(foreach library,$(LIBRARIES),-l$(library))

.PHONY: all clean distclean

all: $(PCH) $(LIBNAME)

$(PCH):
	@- echo "Making PCH"
	$(CC) -x c++-header $(PCH).h -emit-pch -o $(PCH).pch $(CPPFLAGS) 

.cpp.o:
	$(CC) $(USE_PCH) $(CPPFLAGS) -c $< -o $@ 

clean:
	$(RM) $(NAME)
	$(RM) $(OBJS)
	 $(RM) $(PCH).pch

$(LIBNAME): $(OBJS) $(PCH).pch
	ar cr $(LIBNAME) $(OBJS)
	cp $(LIBNAME) $(HOME)/lib

depend:
	@- echo Making dependancies
	makedepend -I$(KAI_INCLUDE) -Y/std -DKAI_NAMESPACE_NAME=KAI -KAI_USE_NAMESPACES $(CXX_SRCS) 2> /dev/null

distclean: clean

# DO NOT DELETE
