cmake_minimum_required(VERSION 3.12)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${BIN_HOME}/Test")
set(core_libs Executor Core PiLang RhoLang TauLang)

macro(build_lang_test lang)
    set(name Test${lang})
    project(${name})
    set(home ${TEST_HOME}/Language/${name})
    set(source_path ${home})
    set(header_path ${home}/Include)
    set(script_path ${TEST_HOME}/Language/Test${lang}/Scripts/)
    string(TOLOWER ${lang} ext)

    #message(STATUS SOURCE "name: ${name}")
    #message(STATUS SOURCE "Souce path: ${source_path}")
    #message(STATUS HEADER "Header path: ${header_path}")
    message(STATUS SCRIPT "Script path: ${script_path}")
    file(GLOB_RECURSE sources ${source_path}/*.cpp)
    list(APPEND sources ${TEST_HOME}/Language/TestLangCommon.cpp)
    list(APPEND sources ${TEST_HOME}/Common/TestCommon.cpp)
    list(APPEND sources ${TEST_HOME}/Common/MyTestStruct.cpp)
    file(GLOB_RECURSE headers ${header_path}/*.h)
    file(GLOB_RECURSE scripts ${script_path}/*.${ext})
    include_directories(${header_path})
    include_directories(${TEST_HOME}/Include)
    link_libraries(${core_libs} ${GTEST_BOTH_LIBRARIES} ${Boost_LIBRARIES})
    add_executable(${name} ${sources} ${headers} ${scripts} CMakeLists.txt)
    source_group("Scripts" FILES ${scripts})
    source_group("Headers" FILES ${headers})
    #message(WARNING ${ext} --- extension)
    #message(WARNING ${script_path} --- script path)
    #message(WARNING ${CMAKE_CURRENT_SOURCE_DIR} --- current source dir)
    #message(WARNING "${scripts}" --- scripts)
    #workded? a bit? source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX "${name}/Scripts" FILES ${scripts})
    #source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${scripts})
    #source_group("Scripts" ${scripts})
    target_compile_definitions(${name} PRIVATE KAI_SCRIPT_ROOT=${script_path} KAI_LANG_NAME=${lang} KAI_LANG_EXT=${ext})
    #cotire(${name})
endmacro()

set(langs Tau Rho Pi)
foreach (lang ${langs})
    build_lang_test(${lang})
endforeach()

